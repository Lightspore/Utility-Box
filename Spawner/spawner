#!/bin/bash

# Debug mode [CHANGE]
DEBUG=0

# Spawn limit [CHANGE]
LIMIT=7
# Wait timer before check for room to spawn [CHANGE]
CWAIT=5

# Variables [CHANGE]
userVars=("A,1" "B,2" "C,3" "D,4" "E,5" "F,6" "G,7" "H,8" "I,9" "J,10" "K,11")

userCode () {
    local userVar=$1

    #### Replace this section with your code ###
    echo "PID $BASHPID: running - userVar($userVar)"
    sleep 15
    echo "PID $BASHPID: finished"
    ############################################
}

##################################################################################
######################### DO NOT CHANGE BEYOND THIS LINE #########################
##################################################################################
cRun () {
    local cVar=$1

    while :
    do
        {
        flock $fd
            N=$(head -1 lock)
            if [ $N -gt 0 ]
            then
                [ $DEBUG -eq 1 ] && echo "PID $BASHPID: Take 1 from N($N)"
                ((N--))
                echo $N > lock
                flock -u $fd
                break
            fi
        } {fd}<lock
        flock -u $fd
        sleep $CWAIT
    done

    userCode $cVar

    {
    flock $fd
        N=$(head -1 lock)
        [ $DEBUG -eq 1 ] && echo "PID $BASHPID: Give 1 to N($N)"
        ((N++))
        echo $N > lock
    } {fd}<lock

    # Exit child process
    exit 0
}

# Make temporary workspace
cd "$(mktemp -d)"

# Make lock file
echo $LIMIT > lock

for cVar in ${userVars[@]}
do
    [ $DEBUG -eq 1 ] && echo "Parent PID $$ $BASHPID: $cVar"
    cRun "$cVar" &
done

wait

# Clean up
rm -r $PWD
